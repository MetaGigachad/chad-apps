/* tslint:disable */
/* eslint-disable */
/**
 * Training service
 * Backend for training app
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkoutRef } from './WorkoutRef';
import {
    WorkoutRefFromJSON,
    WorkoutRefFromJSONTyped,
    WorkoutRefToJSON,
    WorkoutRefToJSONTyped,
} from './WorkoutRef';
import type { MuscleGroup } from './MuscleGroup';
import {
    MuscleGroupFromJSON,
    MuscleGroupFromJSONTyped,
    MuscleGroupToJSON,
    MuscleGroupToJSONTyped,
} from './MuscleGroup';
import type { ExerciseLog } from './ExerciseLog';
import {
    ExerciseLogFromJSON,
    ExerciseLogFromJSONTyped,
    ExerciseLogToJSON,
    ExerciseLogToJSONTyped,
} from './ExerciseLog';

/**
 * 
 * @export
 * @interface WorkoutLog
 */
export interface WorkoutLog {
    /**
     * 
     * @type {string}
     * @memberof WorkoutLog
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof WorkoutLog
     */
    name: string;
    /**
     * 
     * @type {WorkoutRef}
     * @memberof WorkoutLog
     */
    baseWorkoutRef: WorkoutRef;
    /**
     * 
     * @type {number}
     * @memberof WorkoutLog
     */
    startedAt: number;
    /**
     * 
     * @type {number}
     * @memberof WorkoutLog
     */
    endedAt: number;
    /**
     * 
     * @type {Array<MuscleGroup>}
     * @memberof WorkoutLog
     */
    muscleGroups: Array<MuscleGroup>;
    /**
     * 
     * @type {Array<ExerciseLog>}
     * @memberof WorkoutLog
     */
    exercises: Array<ExerciseLog>;
}

/**
 * Check if a given object implements the WorkoutLog interface.
 */
export function instanceOfWorkoutLog(value: object): value is WorkoutLog {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('baseWorkoutRef' in value) || value['baseWorkoutRef'] === undefined) return false;
    if (!('startedAt' in value) || value['startedAt'] === undefined) return false;
    if (!('endedAt' in value) || value['endedAt'] === undefined) return false;
    if (!('muscleGroups' in value) || value['muscleGroups'] === undefined) return false;
    if (!('exercises' in value) || value['exercises'] === undefined) return false;
    return true;
}

export function WorkoutLogFromJSON(json: any): WorkoutLog {
    return WorkoutLogFromJSONTyped(json, false);
}

export function WorkoutLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkoutLog {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'baseWorkoutRef': WorkoutRefFromJSON(json['baseWorkoutRef']),
        'startedAt': json['startedAt'],
        'endedAt': json['endedAt'],
        'muscleGroups': ((json['muscleGroups'] as Array<any>).map(MuscleGroupFromJSON)),
        'exercises': ((json['exercises'] as Array<any>).map(ExerciseLogFromJSON)),
    };
}

export function WorkoutLogToJSON(json: any): WorkoutLog {
    return WorkoutLogToJSONTyped(json, false);
}

export function WorkoutLogToJSONTyped(value?: WorkoutLog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'baseWorkoutRef': WorkoutRefToJSON(value['baseWorkoutRef']),
        'startedAt': value['startedAt'],
        'endedAt': value['endedAt'],
        'muscleGroups': ((value['muscleGroups'] as Array<any>).map(MuscleGroupToJSON)),
        'exercises': ((value['exercises'] as Array<any>).map(ExerciseLogToJSON)),
    };
}

