apiVersion: v1
kind: Service
metadata:
  name: training-service
spec:
  selector:
    app: training-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: training-service
spec:
  selector:
    matchLabels:
      app: training-service
  template:
    metadata:
      labels:
        app: training-service
    spec:
      containers:
      - name: training-service
        image: {{ $.Values.training.service.image }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config-volume
          mountPath: /root/app/etc/training_service/static_config.yaml
          subPath: static_config.yaml
      volumes:
      - name: config-volume
        secret:
          secretName: training-service-config
---
apiVersion: v1
kind: Secret
metadata:
  name: training-service-config
type: Opaque
stringData:
  static_config.yaml: |
    components_manager:
      task_processors:
        main-task-processor:
          worker_threads: 1
        fs-task-processor:
          worker_threads: 1
      default_task_processor: main-task-processor
      components:
        server:
          listener:
            port: 80
            task_processor: main-task-processor
        logging:
          fs-task-processor: fs-task-processor
          loggers:
            default:
              file_path: '@stderr'
              level: debug
              overflow_behavior: discard
        dynamic-config:
          defaults:
            HTTP_CLIENT_CONNECTION_POOL_SIZE: 1000
            POSTGRES_DEFAULT_COMMAND_CONTROL:
              network_timeout_ms: 750
              statement_timeout_ms: 500
        testsuite-support: {}
        http-client:
          load-enabled: true
          fs-task-processor: fs-task-processor
        tests-control:
          load-enabled: false
          path: /tests/{action}
          method: POST
          task_processor: main-task-processor
        handler-ping:
          path: /api/ping
          method: GET
          task_processor: main-task-processor
          throttling_enabled: false
          url_trailing_slash: strict-match
        handler-config:
          path: /api/config
          method: GET
          task_processor: main-task-processor
          frontendConfig:
            oAuth2:
              authUrl: https://auth.metachad.{{ $.Values.dns.rootDomain }}/oauth2/auth
              tokenUrl: https://auth.metachad.{{ $.Values.dns.rootDomain }}/oauth2/token
              clientId: {{ $.Values.training.oauth2Client.id }}
              redirectUri: {{ index $.Values.training.oauth2Client.redirectUris 0 }}
            
        get-workouts-handler:
          path: /api/workouts
          method: GET
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        get-workout-handler:
          path: /api/workout/{id}
          method: GET
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        post-workout-handler:
          path: /api/workout
          method: POST
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        put-workout-handler:
          path: /api/workout/{id}
          method: PUT
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        delete-workout-handler:
          path: /api/workout/{id}
          method: DELETE
          task_processor: main-task-processor
          auth:
            types:
              - bearer

        get-exercises-handler:
          path: /api/exercises
          method: GET
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        post-exercise-handler:
          path: /api/exercise
          method: POST
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        delete-exercise-handler:
          path: /api/exercise/{id}
          method: DELETE
          task_processor: main-task-processor
          auth:
            types:
              - bearer

        get-workout-logs-handler:
          path: /api/workoutLogs
          method: GET
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        get-workout-log-handler:
          path: /api/workoutLog/{id}
          method: GET
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        post-workout-log-handler:
          path: /api/workoutLog
          method: POST
          task_processor: main-task-processor
          auth:
            types:
              - bearer
        delete-workout-log-handler:
          path: /api/workoutLog/{id}
          method: DELETE
          task_processor: main-task-processor
          auth:
            types:
              - bearer

        postgres-db-1:
          dbconnection: postgresql://service:{{ $.Values.training.postgres.passwords.service }}@training-postgres.default.svc.cluster.local:5432/service
          blocking_task_processor: fs-task-processor
          dns_resolver: async
          sync-start: false
          connlimit_mode: manual
        dns-client:
          fs-task-processor: fs-task-processor
        auth-endpoint:
          url: http://hydra-admin.default.svc.cluster.local
